# Generated by Django 3.2.9 on 2021-11-13 19:06

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('phone', models.CharField(max_length=13, unique=True)),
                ('is_worker', models.BooleanField(default=False, verbose_name='Worker user')),
                ('is_customer', models.BooleanField(default=False, verbose_name='customer user')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('dob', models.DateField(default=datetime.date.today, verbose_name='Date Of Birth')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile_pic')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, default='Punjab', max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Customer_Profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='WorkerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('dob', models.DateField(default=datetime.date.today, verbose_name='Date Of Birth')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile_pic')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, default='Punjab', max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('prof', models.CharField(default='Electrician', max_length=50)),
                ('is_available', models.BooleanField(default=False, help_text='Designates whether this worker is available. Activate by missed call', verbose_name='Available')),
                ('hourly_rate', models.IntegerField(blank=True, default=100, null=True)),
                ('daily_rate', models.IntegerField(blank=True, default=400, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Worker_Profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Worker',
            },
        ),
        migrations.CreateModel(
            name='RatingOfWorker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.customeruser')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='api.workeruser')),
            ],
        ),
    ]
